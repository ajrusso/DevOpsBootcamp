#!/user/bin/env groovy

@Library('jenkins-shared-library')
def gv

pipeline {
    agent any
    stages {
        stage('Initialize') {
            steps {
                script {
                    echo 'Initializing...'
                    dir('Exercises/AwsServices/aws-exercises/app') {
                        gv = load 'script.groovy'
                    }
                    sh 'npm -v'
                }
            }
        }
        stage("Increment Version") {
            steps {
                script {
                    dir('Exercises/AwsServices/aws-exercises/app') {
                        npmIncPatchVer()
                        def version = nodeGetVer()
                        env.IMAGE_NAME =  "$version-$BUILD_NUMBER"
                    }
                }
            }
        }
        stage("Test Application") {
            steps {
                script {
                    dir('Exercises/AwsServices/aws-exercises/app') {
                        npmTestApp()
                    }
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    dir('Exercises/AwsServices/aws-exercises/app') {
                        dockerBuild('ajrusso/devops_bootcamp')
                    }
                }
            }
        }
        stage('Push Docker Image') {
            steps {
                script {
                    dir('Exercises/AwsServices/aws-exercises/app') {
                        dockerLogin()
                        dockerPush('ajrusso/devops_bootcamp')
                    }
                }
            }
        }
        stage('Deploy') {
            steps {
                script {
                    gv.deployDockerImage(
                        'ec2-user@98.81.117.154',
                        '/home/ec2-user/DevOpsBootcamp/Exercises/AwsServices/aws-exercises/app'
                    )
                }
            }
        }
        stage('Commit Version Update') {
            steps {
                script {
                    gv.commitVersion()
                }
            }
        }
    }
}