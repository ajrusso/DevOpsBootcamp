#!/user/bin/env groovy

@Library('jenkins-shared-library')
def gv

pipeline {
    agent any
    stages {
        stage('Initialize') {
            steps {
                script {
                    echo 'Initializing...'
                    dir('Exercises/BuildAutomationCICDWithJenkins/jenkins-exercises/app') {
                        gv = load 'script.groovy'
                    }
                    sh 'npm -v'
                }
            }
        }
        stage("Increment Version") {
            steps {
                script {
                   npmIncPatchVer()
                   def version = nodeGetVer()
                   env.IMAGE_NAME =  "$version-$BUILD_NUMBER"
                }
            }
        }
        stage("Test Application") {
            steps {
                script {
                    npmTestApp()
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    dir('Exercises/BuildAutomationCICDWithJenkins/jenkins-exercises/app') {
                        dockerBuild('ajrusso/devops_bootcamp')
                    }
                }
            }
        }
        stage('Push Docker Image') {
            steps {
                script {
                    dir('Exercises/BuildAutomationCICDWithJenkins/jenkins-exercises/app') {
                        dockerLogin()
                        dockerPush('ajrusso/devops_bootcamp')
                    }
                }
            }
        }
        stage('Commit and Push Git Changes') {
            steps {
                script {
                    echo 'Commiting and pushing updated version to Git...'
                }
            }
        }
    }
}